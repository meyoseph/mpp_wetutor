{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdit\\\\IdeaProjects\\\\mpp\\\\mpp_wetutor\\\\client\\\\src\\\\components\\\\tutor\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../common/spinner\";\nimport ProfileActions from \"./ProfileActions\";\nimport { getCurrentProfile } from \"../../actions/profileActions\";\nimport MyProfile from \"./MyProfile\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n    const {\n      userInfo\n    } = this.props.auth;\n    const {\n      profile,\n      loading\n    } = this.props.profile;\n    let dashboardContent;\n\n    if (profile === null || loading) {\n      dashboardContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 26\n      }, this);\n    } else {\n      // Check if logged in user has a profile data\n      if (Object.keys(profile).length > 0) {\n        dashboardContent = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-muted\",\n            children: [\"Welcome\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${profile.tutor.id}`,\n              children: userInfo.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToastProvider, {\n            children: /*#__PURE__*/_jsxDEV(ProfileActions, {\n              profile: profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyProfile, {\n            profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"60px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              // onClick={this.onDeleteClick.bind(this)}\n              className: \"btn btn-danger\",\n              children: \"Delete My Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      } else {\n        // User is logged in but has no profile\n        dashboardContent = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead text-muted\",\n            children: [\"Welcome \", userInfo.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You have not yet set a profile, please add some info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create-profile\",\n            className: \"btn btn-lg btn-info\",\n            children: \"Create Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      style: {\n        height: \"auto\",\n        marginBottom: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-4\",\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), dashboardContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDashboard.protoTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  //   deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/abdit/IdeaProjects/mpp/mpp_wetutor/client/src/components/tutor/Dashboard.js"],"names":["React","Component","PropTypes","Link","connect","Spinner","ProfileActions","getCurrentProfile","MyProfile","ToastProvider","Dashboard","componentDidMount","props","render","userInfo","auth","profile","loading","dashboardContent","Object","keys","length","tutor","id","userName","marginBottom","height","protoTypes","func","isRequired","object","mapStateProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../common/spinner\";\r\nimport ProfileActions from \"./ProfileActions\";\r\nimport {\r\n  getCurrentProfile,\r\n} from \"../../actions/profileActions\";\r\nimport MyProfile from \"./MyProfile\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.props.auth;\r\n    const { profile, loading } = this.props.profile;\r\n\r\n    let dashboardContent;\r\n    if (profile === null || loading) {\r\n      dashboardContent = <Spinner />;\r\n    } else {\r\n      // Check if logged in user has a profile data\r\n      if (Object.keys(profile).length > 0) {\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">\r\n              Welcome{\" \"}\r\n              <Link to={`/profile/${profile.tutor.id}`}>{userInfo.userName}</Link>\r\n            </p>\r\n            <hr />\r\n            <ToastProvider>\r\n              <ProfileActions\r\n                profile={profile}\r\n              />\r\n            </ToastProvider>\r\n            <MyProfile profile={profile} />\r\n            <div style={{ marginBottom: \"60px\" }}>\r\n              <button\r\n                // onClick={this.onDeleteClick.bind(this)}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                Delete My Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // User is logged in but has no profile\r\n        dashboardContent = (\r\n          <div>\r\n            <p className=\"lead text-muted\">Welcome {userInfo.userName}</p>\r\n            <hr/>\r\n            <p>You have not yet set a profile, please add some info</p>\r\n            <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\r\n              Create Profile\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"dashboard\" style={{ height: \"auto\", marginBottom:\"400px\" }}>\r\n        <div className=\"container-fluid mt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4\">Dashboard</h1>\r\n              {dashboardContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.protoTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  //   deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateProps, { getCurrentProfile })(\r\n  Dashboard\r\n);\r\n"]},"metadata":{},"sourceType":"module"}